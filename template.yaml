AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  ubic-food-management-api-v2
  
  Sample SAM Template for ubic-food-management-api-v2
Parameters:
  ChannelId:
    Type: String
  ChannelSecret:
    Type: String
  S3BucketName:
    Type: String
  

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    Environment:
      Variables:
        STAGE: prod
        CHANNEL_ID: !Ref ChannelId
        CHANNEL_SECRET: !Ref ChannelSecret
        AWS_SAM_LOCAL: "false"
        S3_BUCKET_NAME: !Ref S3BucketName 
  Api:
    OpenApiVersion: 2.0.0

Resources:
  ApiRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: api-execution-role-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - Fn::Sub: ${HelloWorldFunction.Arn}
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: "rest-api"
      StageName: prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./swagger.yml
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*' 
          HttpMethod: '*' 
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello-world/
      Handler: hello-world
      Runtime: go1.x
      Architectures:
        - x86_64
      Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
      Events:
        UserGet:
          Type: Api
          Properties:
            Path: /user
            Method: get
            RestApiId: !Ref Api
        TransactionDelete:
          Type: Api
          Properties:
            Path: /transaction
            Method: delete
            RestApiId: !Ref Api
        AuthGet:
          Type: Api
          Properties:
            Path: /auth
            Method: get
            RestApiId: !Ref Api
        CallbackGet:
          Type: Api
          Properties:
            Path: /callback
            Method: get
            RestApiId: !Ref Api
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${HelloWorldFunction}

Outputs:
  HelloWorldFunction:
    Description: "First Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
